[{"id":0,"href":"/post/mst/","title":"MST (최소신장트리), Kruskal, Prim","section":"Posts","content":" Minimum Spanning Tree # 신장 트리 (Spanning Tree) # 무방향 그래프 G(V, E)에서 모든 정점 V를 간선 E 중 가장 적은 갯수로 사용하여 이은 부분 그래프\nn개의 정점을 가지는 그래프라면 n-1개의 간선이 사용됨 사이클을 이루지 않음 최소 신장 트리 (Minimum Spanning Tree) # G(V, E)에서 간선에 가중치가 주어진 경우 선택된 간선의 가중치의 합이 최소가 되는 신장 트리\nMST 구하는 알고리즘 # Kruskal # 사이클을 만들지 않는 선택에 한해서 가장 작은 가중치를 가지는 선을 선택해나가는 알고리즘\nGreedy하게 모든 간선의 집합 중 가장 작은 가중치를 선택 사이클을 이루는 지 판단하기 위해 Union find 사용 시간 복잡도: $O(E \\log E)$ 동작 방식 # 모든 간선을 저장한 후, 가중치 오름차순으로 정렬\n첫 번째 간선의 두 정점 a, b의 연결 여부 판단\n3-1. 두 정점이 연결되어 있다면 continue; 다음 간선으로\n3-2. 두 정점이 연결되어있지 않다면 가중치를 최종값에 더하고, 두 정점 union\n2~3의 과정을 간선이 n-1개 생길 때까지 반복\nPrim # 하나의 정점에서 시작하여 현재 연결할 수 있는 가장 작은 가중치의 간선을 연결해나가는 알고리즘\n간선의 연결은 인접 리스트로 저장 현재 연결 가능한 간선은 구조체의 형태로 priority queue에 저장한 후 하나씩 꺼내서 사용 시간 복잡도: $O(E \\log V)$ 동작 방식 # 시작점에 연결된 모든 간선을 우선순위큐에 입력 가장 작은 가중치를 가지는 간선 연결, 간선의 가중치를 최종값에 더함 새롭게 연결된 정점의 간선 중 방문하지 않은 간선을 우선순위큐에 입력 2~3의 과정을 간선이 n-1개 생길 때까지 반복 "},{"id":1,"href":"/post/union-find/","title":"Union Find (C++)","section":"Posts","content":" Union Find # Union Find: 그래프에서 두 노드가 같은 집합에 속하는지 판별하는 알고리즘 노드를 합치는 union 연산 노드가 같은 집합인지 판별하는 find 연산 구조 # unionfind[i]: i번 노드의 부모 노드 정보를 담는다. unify(x, y): x번 노드와 y번 노드를 합친다. 이때 unify 이후 둘은 같은 부모 노드를 가리키게 된다. same(x, y): x번 노드와 y번 노드가 같은 집합에 있는 지 반환한다. find(x): x번 노드의 부모 노드 정보를 반환한다. 이때 unionfind[x]를 단순히 반환하는 것이 아닌, unionfind[x]를 업데이트하는 과정을 거침 재귀함수를 통해 구현하여 찾음과 동시에 부모 노드가 업데이트되도록 함 전체 코드 # #include \u0026lt;iostream\u0026gt; #define MAX 100 using namespace std; using ll = long long; ll unionfind[MAX]; ll find(ll x){ if(unionfind[x]==x){ return x; } return unionfind[x]=find(unionfind[x]); } void unify(ll x, ll y){ ll n1=find(x), n2=find(y); if(n1\u0026lt;n2){ unionfind[n2]=n1; } else{ unionfind[n1]=n2; } } bool same(ll x, ll y){ return (find(x)==find(y)); } int main(){ } "},{"id":2,"href":"/post/rotational-alkane/","title":"Alkane의 회전 에너지 도표","section":"Posts","content":" Alkane이 형태 이성질체를 가지는 이유 # 입체 이성질체 (Stereoisomer): 결합 상태는 동일하나 입체적인 구조가 다른 이성질체 형태 이성질체 (Conformer): 입체 이성질체 중 원자단을 회전시켜 같은 구조를 만들 수 있는 이성질체 Alkane은 불포화도가 0으로 모두 단일결합으로 이루어져 있다. 따라서 결합을 기준으로 회전이 가능하다. $\\sigma$ bond는 축상결합을 하기 때문에 단일결합을 축으로 회전 가능 $\\pi$ bond는 축을 벗어난 결합을 하기 위해 회전 불가능. 회전이 일어나는 경우 $\\pi$ bond가 깨짐 Alkane이 형태 이성질체를 가지므로 특정 이성질체끼리 분리는 불가능하다. 안정한 특정 형태만 존재하는 것이 아니라, 안정한 특정 형태로 존재할 확률이 높은 것 한 분자의 형태는 유동적으로 바뀜 Alkene은 이중 결합을 가지고 있어서 회전이 불가능하다 이중 결합은 하나의 $\\sigma$ bond랑 $\\pi$ bond를 갖기 때문에 회전시 결합이 깨짐 Alkane의 입체 구조 표기법 # 톱질대 구조식 (Sawhorse representation): C\u0026ndash;C 결합을 비스듬한 각도에서 바라보아 모든 결합이 보이게 함 뉴먼 투영식 (Newman projection): 기준이 되는 C\u0026ndash;C 결합을 면과 수직하게 놓아 두 탄소가 하나의 원으로 보이도록 함. 앞쪽 탄소의 결합들은 원의 중심과 연결하고, 뒤쪽 탄소의 결합들은 원의 가장자리와 연결된 선으로 나타냄 Alkane별 예시 # 1. Ethane ($C_6 H_6$) # "},{"id":3,"href":"/post/group-velocity/","title":"군속도 (Group Velocity) 시각화","section":"Posts","content":" 군속도 시각화 파수와 각진동수가 미세하게 다른 5개의 파동 중첩 시각화 검은색의 5개 파동이 중첩되지 않은 원본이다. 5개의 원본 파동을 합친 파동을 붉은색으로 표시했다. 합성된 파동의 외피가 느린 속도로 진행함을 확인할 수 있다. 구현 방법 Processing으로 구현 후 p5.js로 변환했다. p5js.org에 업로드 후 임베드했다. "}]